razor MiniBank\Views\Employee\CloseAccount.cshtml
@{
    ViewBag.Title = "Close Account";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<div class="card shadow-sm p-4 mt-4">
    <h3 class="text-danger mb-3">Close Account</h3>

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success">@TempData["Success"]</div>
    }

    <div class="row mb-3">
        <div class="col-md-8">
            <h5>Lookup by Customer ID</h5>
            <form method="get" action="@Url.Action("CloseAccount", "Employee")" class="row g-2">
                <div class="col-auto">
                    <input type="number" name="customerId" class="form-control" placeholder="Customer ID" min="1" required />
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Lookup</button>
                </div>
                <div class="col-12 mt-2 text-muted">
                    Enter the Customer ID to see linked savings and loan accounts. Select accounts to close.
                </div>
            </form>
        </div>
    </div>

    <hr />

    @{
        var customer = ViewBag.Customer as MiniBank.Models.Customer;
        var accounts = ViewBag.Accounts as List<MiniBank.Models.Account>;
        var savingsMap = ViewBag.SavingsMap as Dictionary<int, MiniBank.Models.SavingsAccount>;
        var loanMap = ViewBag.LoanMap as Dictionary<int, MiniBank.Models.LoanAccount>;
    }

    @if (accounts != null && customer != null)
    {
        <h5>Customer: @customer.CustName (ID: @customer.CustomerId)</h5>

       if (!accounts.Any())
        {
            <div class="alert alert-info">No accounts found for this customer.</div>
            <form method="post" action="@Url.Action("CloseCustomerConfirmed", "Employee")" class="mt-3">
                @Html.AntiForgeryToken()
                <input type="hidden" name="customerId" value="@customer.CustomerId" />
                <button type="submit" class="btn btn-outline-danger" onclick="return confirm('Remove customer @customer.CustName (ID: @customer.CustomerId)? This cannot be undone.');">Close / Remove Customer</button>
                <a class="btn btn-secondary ms-2" href="@Url.Action("CloseAccount", "Employee")">Cancel / New Lookup</a>
            </form>
        }
        else
        {
            <form method="post" action="@Url.Action("CloseSelectedAccounts", "Employee")">
                @Html.AntiForgeryToken()
                <input type="hidden" name="customerId" value="@customer.CustomerId" />

                <table class="table table-bordered mt-3">
                    <thead>
                        <tr>
                            <th style="width:40px"></th>
                            <th>Account ID</th>
                            <th>Type</th>
                            <th>Balance / Outstanding</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var acc in accounts)
                        {
                            <tr>
                                <td class="text-center align-middle">
                                    @if (acc.AccountType == "Savings")
                                    {
                                        <input type="checkbox" name="selectedSavingsIds" value="@acc.AccountId" />
                                    }
                                    else if (acc.AccountType == "Loan")
                                    {
                                        <input type="checkbox" name="selectedLoanIds" value="@acc.AccountId" />
                                    }
                                </td>
                                <td class="align-middle">@acc.AccountId</td>
                                <td class="align-middle">@acc.AccountType</td>
                                <td class="align-middle">
                                    @if (acc.AccountType == "Savings")
                                    {
                                        var s = savingsMap != null && savingsMap.ContainsKey(acc.AccountId) ? savingsMap[acc.AccountId] : null;
                                        @(s != null ? s.Balance.ToString("F2") : "-")
                                    }
                                    else
                                    {
                                        var l = loanMap != null && loanMap.ContainsKey(acc.AccountId) ? loanMap[acc.AccountId] : null;
                                        @(l != null && l.OutstandingAmount.HasValue ? l.OutstandingAmount.Value.ToString("F2") : "-")
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="d-flex gap-2">
                    <button type="submit" class="btn btn-danger" onclick="return confirm('Close selected account(s)?');">Close Selected</button>
                    <a class="btn btn-secondary" href="@Url.Action("CloseAccount", "Employee")">Cancel / New Lookup</a>
                </div>
            </form>
        }
    }
    else
    {
        <div class="text-muted mt-3">Enter a Customer ID above and click Lookup to view linked accounts.</div>
    }
</div>